[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prompt Learner",
    "section": "",
    "text": "Why Prompt-Learner?\n  \n  \n    \n     Installation\n  \n  \n    \n     Getting started\n  \n  \n    \n     GitHub"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "Prompt Learner",
    "section": "Install",
    "text": "Install\n1pip install prompt-learner\n\n1\n\nInstall prompt-learner\n\n\n\nShow Philosophy\n\n\n\n\n\n\nAssembling & Learning Prompts\nA prompt is composed of distinct modules.\nEach module can be optimized both on its own, and as a part of the entire system.\n\n1. The task type\n2. The task description\n3. A few examples\n4. Instructions for output format\n5. Custom Prompt Technique specific Instructions\n\n\nPrompt Learner is designed to enable assembly and optimzation of prompts."
  },
  {
    "objectID": "index.html#quickstart",
    "href": "index.html#quickstart",
    "title": "Prompt Learner",
    "section": "Quickstart",
    "text": "Quickstart\nSee the getting started tutorial for a more in-depth introduction to Prompt-learner. Below is a quick overview.\n\nEnsure you install prompt-learner first.\nPick your task type\nDescribe the task\nAdd a few examples\nChoose an LLM adapter\nSelect some examples by running an optimizer\nGet the final prompt\nInfer on your new sample!"
  },
  {
    "objectID": "getting-started.html",
    "href": "getting-started.html",
    "title": "Getting started",
    "section": "",
    "text": "Using Prompt-Learner\nHere is a step by step approach to run prompt-learner to optimize and assemble a prompt for any classification task.\n\nPrompt-learner for Classification Task\n\nDescribe your task\n\n\nclassification_description = \"You have to classify customer texts as Urgent or Not Urgent\"\n\n\nSpecify allowed labels\n\n\nclassification_labels = [\"Urgent\", \"Not Urgent\"]\n\n\nCreate the classification task\n\n\nfrom tasks.classification import ClassificationTask\nclassification_task = ClassificationTask(description=classification_description, allowed_labels=classification_labels)\n\n\nAdd a few examples to your task\n\n\nlassification_task.add_example(Example(text=\"I need help\", label=\"Urgent\"))\nclassification_task.add_example(Example(text=\"I got my package\", label=\"Not Urgent\"))\n\n\nChoose an LLM Provider template\n\n\nfrom templates.openai_template import OpenAICompletionTemplate\nopenai_template = OpenAICompletionTemplate(task=classification_task)\n\n\nRun any Optimizer to sample Examples for inserting in prompt\n\n\nfrom optimizers.selectors.random_sampler import RandomSampler\nsampler = RandomSampler(num_samples=1, task=classification_task)\nsampler.select_examples()\n\n\nAssemble the prompt with selected examples, and any prompting technique (example, Chain of Thought)\n\n\nfrom prompts.cot import CoT\nopenai_prompt = CoT(template=openai_template, selector=sampler)\nopenai_prompt.assemble_prompt()\n\n\nView your prompt!\n\n\nopenai_prompt.prompt\n\n\nInfer using your prompt\n\n\nfrom adapters.openai import OpenAI\nopenai_prompt.add_inference(\"My package is missing\")\n\nanswer = classification_task.predict(OpenAI(), openai_prompt.prompt)"
  },
  {
    "objectID": "contribute/index.html",
    "href": "contribute/index.html",
    "title": "Contribute",
    "section": "",
    "text": "Contribute\nCheck out our contributing guide for details! Guides for setting up an environment and getting started are here.",
    "crumbs": [
      "Contribute"
    ]
  },
  {
    "objectID": "tutorials/getting_started.html",
    "href": "tutorials/getting_started.html",
    "title": "Getting started",
    "section": "",
    "text": "Using Prompt-Learner\nHere is a step by step approach to run prompt-learner to optimize and assemble a prompt for any classification task.\n\nPrompt-learner for Classification Task\n\nDescribe your task\n\n\nclassification_description = \"You have to classify customer texts as Urgent or Not Urgent\"\n\n\nSpecify allowed labels\n\n\nclassification_labels = [\"Urgent\", \"Not Urgent\"]\n\n\nCreate the classification task\n\n\nfrom tasks.classification import ClassificationTask\nclassification_task = ClassificationTask(description=classification_description, allowed_labels=classification_labels)\n\n\nAdd a few examples to your task\n\n\nlassification_task.add_example(Example(text=\"I need help\", label=\"Urgent\"))\nclassification_task.add_example(Example(text=\"I got my package\", label=\"Not Urgent\"))\n\n\nChoose an LLM Provider template\n\n\nfrom templates.openai_template import OpenAICompletionTemplate\nopenai_template = OpenAICompletionTemplate(task=classification_task)\n\n\nRun any Optimizer to sample Examples for inserting in prompt\n\n\nfrom optimizers.selectors.random_sampler import RandomSampler\nsampler = RandomSampler(num_samples=1, task=classification_task)\nsampler.select_examples()\n\n\nAssemble the prompt with selected examples, and any prompting technique (example, Chain of Thought)\n\n\nfrom prompts.cot import CoT\nopenai_prompt = CoT(template=openai_template, selector=sampler)\nopenai_prompt.assemble_prompt()\n\n\nView your prompt!\n\n\nopenai_prompt.prompt\n\n\nInfer using your prompt\n\n\nfrom adapters.openai import OpenAI\nopenai_prompt.add_inference(\"My package is missing\")\n\nanswer = classification_task.predict(OpenAI(), openai_prompt.prompt)"
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing to Prompt-Learner",
    "section": "",
    "text": "Contributing to Prompt-Learner\nWe love new contributors!"
  },
  {
    "objectID": "contribute/01_environment.html",
    "href": "contribute/01_environment.html",
    "title": "Setting up a development environment",
    "section": "",
    "text": "Setting up a development environment",
    "crumbs": [
      "Contribute",
      "Setting up a development environment"
    ]
  },
  {
    "objectID": "why.html",
    "href": "why.html",
    "title": "Why Prompt-Learner?",
    "section": "",
    "text": "Never write strings again.",
    "crumbs": [
      "Why Prompt-Learner?"
    ]
  },
  {
    "objectID": "why.html#what-is-prompt-learner",
    "href": "why.html#what-is-prompt-learner",
    "title": "Why Prompt-Learner?",
    "section": "What is Prompt-Learner?",
    "text": "What is Prompt-Learner?\nWe break down prompts into modular parts. And optimize them to finally assemble them.\n\nprint(5)\n\n5",
    "crumbs": [
      "Why Prompt-Learner?"
    ]
  },
  {
    "objectID": "why.html#community",
    "href": "why.html#community",
    "title": "Why Prompt-Learner?",
    "section": "Community",
    "text": "Community\nCommunity discussions primarily take place on GitHub",
    "crumbs": [
      "Why Prompt-Learner?"
    ]
  },
  {
    "objectID": "why.html#getting-started",
    "href": "why.html#getting-started",
    "title": "Why Prompt-Learner?",
    "section": "Getting started",
    "text": "Getting started\nIf youâ€™re interested in trying Prompt-learner we recommend the getting started tutorial.",
    "crumbs": [
      "Why Prompt-Learner?"
    ]
  },
  {
    "objectID": "install.html",
    "href": "install.html",
    "title": "Installation",
    "section": "",
    "text": "Installation"
  }
]